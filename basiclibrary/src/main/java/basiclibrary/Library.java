/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

//    from; https://stackoverflow.com/questions/363681/how-do-i-generate-random-integers-within-a-specific-range-in-java
    public static int randomInt(int min, int max) {
        Random random = new Random();
        int randomInt = random.nextInt((max - min) + 1) + min;
        return randomInt;
    }

    public static int[] roll(int rollsNum){
        int[] rollsArr = new int[rollsNum];
        for(int i = 0; i < rollsArr.length; i++){
            rollsArr[i] = randomInt(1,6);
        }
        return rollsArr;
    }

    public static boolean containsDuplicates(int[] arrIn){
        boolean duplicate = false;

        for(int i = 0; i < arrIn.length; i++){
            for(int j = 0; j < arrIn.length; j++){
                if(arrIn[i] == arrIn[j] && i != j){
                    duplicate = true;
                }
            }
        }

        return duplicate;
    }

    public static float arrAvg(int[] arrIn){
        float total = 0;

        for(int i = 0; i < arrIn.length; i++){
            total += arrIn[i];
        }

        return (total/((float)arrIn.length));
    }

    //I didn't read the instructions, this is extra.
    public static float[] arrAvgLots(int[][] arrIn){
        float[] arrOut = new float[arrIn.length];

        for(int i = 0; i < arrIn.length; i++){
            arrOut[i] = arrAvg(arrIn[i]);
        }

        return arrOut;
    }

    //This is the correct one.
    public static int[] arrAvgLow(int[][] arrIn){
        int lowIndex = 0;
        float lowAvg = arrAvg(arrIn[0]);

        for(int i = 0; i < arrIn.length; i++){
            if(lowAvg > arrAvg(arrIn[i])){
                lowIndex = i;
            }
        }

        return arrIn[lowIndex];
    }

    public static String weather(int [][] arrIn){
        HashSet<Integer> hs = new HashSet<>();
        int min = arrIn[0][0];
        int max = arrIn[0][0];

        for(int i = 0; i < arrIn.length; i++){
            for(int j = 0; j < arrIn[i].length; j++){
                hs.add(arrIn[i][j]);
                if(arrIn[i][j] < min){
                    min = arrIn[i][j];
                }
                if(arrIn[i][j] > max){
                    max = arrIn[i][j];
                }
            }
        }
        String output = String.format("High: %d\nLow: %d\n", max, min);
        for(int j = min; j < max; j++){
            if(!hs.contains(j)){
                output += String.format("Never saw temperature: %d\n", j);
            }
        }

        System.out.println(output);
        return(output);
    }

    public static String tally(List<String> votes){
        //to loop through a list; https://beginnersbook.com/2013/12/how-to-loop-arraylist-in-java/
        HashMap<String, Integer> voteTally = new HashMap<>();

        for(int i = 0; i < votes.size(); i++){
//            System.out.println(votes.get(i));

            // to increment a hash map; https://codereview.stackexchange.com/questions/57078/incrementing-integers-in-map
            voteTally.merge(votes.get(i), 1, (oldValue, one) -> oldValue + one);
        }

        int max = 0;
        String output = "";
//        to loop through a hashmap; https://www.w3schools.com/java/java_hashmap.asp
        for(String i: voteTally.keySet()){
//            System.out.println("Key " + i + "value " + voteTally.get(i));
            if(voteTally.get(i) > max){
                max = voteTally.get(i);
                output = i;
            }
        }

        return output;
    }
}
