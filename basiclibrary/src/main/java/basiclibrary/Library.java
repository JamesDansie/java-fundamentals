/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Random;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

//    from; https://stackoverflow.com/questions/363681/how-do-i-generate-random-integers-within-a-specific-range-in-java
    public static int randomInt(int min, int max) {
        Random random = new Random();
        int randomInt = random.nextInt((max - min) + 1) + min;
        return randomInt;
    }

    public static int[] roll(int rollsNum){
        int[] rollsArr = new int[rollsNum];
        for(int i = 0; i < rollsArr.length; i++){
            rollsArr[i] = randomInt(1,6);
        }
        return rollsArr;
    }

    public static boolean containsDuplicates(int[] arrIn){
        boolean duplicate = false;

        for(int i = 0; i < arrIn.length; i++){
            for(int j = 0; j < arrIn.length; j++){
                if(arrIn[i] == arrIn[j] && i != j){
                    duplicate = true;
                }
            }
        }

        return duplicate;
    }

    public static float arrAvg(int[] arrIn){
        float total = 0;

        for(int i = 0; i < arrIn.length; i++){
            total += arrIn[i];
        }

        return (total/((float)arrIn.length));
    }

    //I didn't read the instructions, this is extra.
    public static float[] arrAvgLots(int[][] arrIn){
        float[] arrOut = new float[arrIn.length];

        for(int i = 0; i < arrIn.length; i++){
            arrOut[i] = arrAvg(arrIn[i]);
        }

        return arrOut;
    }

    //This is the correct one.
    public static int[] arrAvgLow(int[][] arrIn){
        int lowIndex = 0;
        float lowAvg = arrAvg(arrIn[0]);

        for(int i = 0; i < arrIn.length; i++){
            if(lowAvg > arrAvg(arrIn[i])){
                lowIndex = i;
            }
        }

        return arrIn[lowIndex];
    }
}
